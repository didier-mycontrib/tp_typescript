(()=>{"use strict";class e extends HTMLElement{attributeChangedCallback(e,t,n){t!==n&&Reflect.defineProperty(this,e,{value:n,writable:!0,enumerable:!0,configurable:!0})}connectedCallback(){const e=this.attachShadow({mode:"closed"});this.initComponentInnerHtml(e),this.initComponentBehavior(e)}initComponentInnerHtml(e){e.innerHTML=`\n        <style>\n        ${this.componentCssTemplateString()}\n        </style>\n  \n        ${this.componentHtmlTemplateString()}\n        `}constructor(){super()}}let t=class extends e{static get observedAttributes(){return["label"]}constructor(e="TogglePanelComponent",t=!1){super(),this.label=e,this.toggleP=t}componentCssTemplateString(){return"\n        .my-card { margin-top: 0.1em; margin-bottom: 0.1em; }\n        .my-card-header { border-top-left-radius: 0.3em; border-top-right-radius: 0.3em;\n        padding: 0.1em; margin-bottom: 0px;}\n        a { text-decoration: none;}\n        .my-card-body {border: 0.1em solid blue; border-bottom-left-radius: 0.3em;\n        border-bottom-right-radius: 0.3em; padding: 0.2em;}\n        .my-bg-primary { background-color: green;}\n        .my-text-light { color : white;}\n        .my-icon { color : blue; background-color: white; margin: 0.2em;\n        padding-left: 0.2em; padding-right : 0.2em;\n        min-width: 1em; font-weight: bold;}\n        .my-collapse { display : none;}\n        .my-show { display : block ;}\n      "}componentHtmlTemplateString(){return`\n      <div class="my-card">\n        <h4 class="my-card-header my-bg-primary" id="myCardHeader">\n        <a class="my-text-light"  >\n        <span class="my-icon" id="myIconShow">+</span>\n        <span class="my-icon" id="myIconCollapse" style="display:none">-</span>${this.label}\n        </a>\n        </h4>\n        <div  id="myCardBody" class="my-card-body my-collapse">\n        <slot></slot>\n        </div>\n      </div>\n      `}initAttrList(e){}initComponentBehavior(e){var t;null===(t=e.getElementById("myCardHeader"))||void 0===t||t.addEventListener("click",(t=>{this.toggleP=!this.toggleP;const n=e.getElementById("myCardBody");null==n||n.setAttribute("class","my-card-body my-collapse"+(this.toggleP?"my-show":""));const o=e.getElementById("myIconShow"),l=e.getElementById("myIconCollapse");null!=o&&(o.style.display=this.toggleP?"none":"inline-block"),null!=l&&(l.style.display=this.toggleP?"inline-block":"none")}))}};var n;t=function(e,t,n,o){var l,r=arguments.length,i=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var a=e.length-1;a>=0;a--)(l=e[a])&&(i=(r<3?l(i):r>3?l(t,n,i):l(t,n))||i);return r>3&&i&&Object.defineProperty(t,n,i),i}([(n="toggle-panel-component",function(e){e.prototype.componentName=n,console.log(`>>> customElement decorator -  componentName= ${n} `),customElements.define(n,e)})],t)})();